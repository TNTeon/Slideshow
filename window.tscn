[gd_scene load_steps=3 format=3 uid="uid://r50jwbftc35"]

[ext_resource type="Script" path="res://Label.gd" id="1_tekdi"]

[sub_resource type="GDScript" id="GDScript_gn3jp"]
script/source = "extends Window

var imageList = []
var imageNumber = 0

var dir = \"\"
var monitorNumber = 0

var displayRes = 0
var directory = 0

var timer = null

var delayFromVid = false

#----------------INIT------------
func _ready():
	if DisplayServer.get_screen_count() >= monitorNumber+1:
		self.get_window().current_screen = monitorNumber
	else:
		self.get_window().current_screen = 0
	
	directory = DirAccess.get_files_at(dir)
	
	for i in directory:
		if \".png\" or \".ogv\" in i:
			imageList.append(i)
	
	self.position = Vector2(self.position.x+(monitorNumber *10),self.position.y)
	self.mode = 3
	
	
	timer = get_parent().get_node(\"Timer\")
	timer.timeout.connect(timeout)
	
#----------------EVERY-FRAME------------
func _process(delta):
	displayRes = DisplayServer.screen_get_size(self.get_window().current_screen)
	#----------------IMAGES------------
	if \".png\" in dir+\"/\"+imageList[imageNumber%len(imageList)]:
		$VideoStreamPlayer.visible = false
		$Sprite2D.visible = true
		var image = Image.new()
		image.load(dir+\"/\"+imageList[imageNumber%len(imageList)])
			
		var image_texture = ImageTexture.new()
		image_texture.set_image(image)
			
		$Sprite2D.texture = image_texture
		
		$Sprite2D.position = Vector2(displayRes.x/2,displayRes.y/2)
		$Sprite2D.position = Vector2(displayRes.x/2,displayRes.y/2)
		$Sprite2D.scale = Vector2(float(displayRes.x)/float(image_texture.get_width()),float(displayRes.y)/float(image_texture.get_height()))
	#----------------VIDEOS------------
	else:
		if $VideoStreamPlayer.stream == null:
			$Sprite2D.visible = false
			$VideoStreamPlayer.visible = true
			
			delayFromVid = true
			var video = VideoStream.new()
			video.file = dir+\"/\"+imageList[imageNumber%len(imageList)]
			$VideoStreamPlayer.stream = load(video.file)
			$VideoStreamPlayer.play()
			$VideoStreamPlayer.position = Vector2(0,0)#Vector2(displayRes.x/2,displayRes.y/2)
			$VideoStreamPlayer.scale = Vector2(float(displayRes.x)/float($VideoStreamPlayer.get_video_texture().get_width()),float(displayRes.y)/float($VideoStreamPlayer.get_video_texture().get_height()))
		
	#----------------INPUTS------------
	if timer.paused == true:
		$Label.newLabel(\"||\",0)
		if $VideoStreamPlayer.stream != null:
			$VideoStreamPlayer.paused = true
	elif $Label.modulate.a != 0:
		$Label.stopLabel()
		if $VideoStreamPlayer.stream != null:
			$VideoStreamPlayer.paused = false
	if Input.is_action_just_pressed(\"ui_right\") or Input.is_action_just_pressed(\"ui_left\"):
		$Label.newLabel(str(timer.wait_time)+\" seconds\",3)
	if Input.is_action_just_pressed(\"ui_up\"):
		self.mode = 3
	if Input.is_action_just_pressed(\"ui_down\"):
		self.mode = 0
		self.size = Vector2(640,480)
		print(self.position)
func setVariables(mon,directory):
	monitorNumber = mon
	dir = directory
	
func timeout():
	if $VideoStreamPlayer.stream == null and delayFromVid == false:
		imageNumber += 1
		print(\"Next\")
	elif $VideoStreamPlayer.stream == null and delayFromVid == true:
		delayFromVid = false
		print(\"Delay\")
	else:
		print(\"NOT NEXT\")

func _on_video_stream_player_finished():
	$VideoStreamPlayer.stream = null
	imageNumber += 1
"

[node name="Window" type="Window"]
position = Vector2i(0, 36)
size = Vector2i(1970, 1040)
script = SubResource("GDScript_gn3jp")
metadata/monitorNumber = 2
metadata/dir = ""

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(120.805, 112.215)

[node name="Label" type="Label" parent="."]
top_level = true
z_index = 2
offset_left = 28.11
offset_right = 253.11
offset_bottom = 137.0
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 100
text = "TEST"
script = ExtResource("1_tekdi")

[node name="VideoStreamPlayer" type="VideoStreamPlayer" parent="."]
offset_right = 40.0
offset_bottom = 40.0

[connection signal="finished" from="VideoStreamPlayer" to="." method="_on_video_stream_player_finished"]
